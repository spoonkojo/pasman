FORMAT: 1A
HOST: http://pasman.io

# PasMan
PasMan API is a *fast and easy to use* service to manage passwords.

##Allowed HTTPs requests:

- `POST` - Creates or updates a resource
- `PUT` - Updates a resource
- `PATCH` - Partial update
- `GET` - Retrieves a resource or list of resources
- `DELETE` - Delete a resource

##Typical Server Responses

- 200 `OK` - The request was successful (some API calls may return 201 instead).
- 201 `Created` - The request was successful and a resource was created.
- 204 `No Content` - The request was successful but there is no representation to return (that is, the response is empty).
- 400 `Bad Request` - The request could not be understood or was missing required parameters.
- 401 `Unauthorized` - Authentication failed or user does not have permissions for the requested operation.
- 403 `Forbidden` - Access denied.
- 404 `Not Found` - Resource was not found.
- 405 `Method Not Allowed` - Requested method is not supported for the specified resource.
- 429 `Too Many Requests` - Exceeded GoodData API limits. Pause requests, wait one minute, and try again. 
- 503 `Service Unavailable` - The service is temporary unavailable (e.g. scheduled Platform Maintenance). Try again later.


# Group Projects
Projects related resources of the **PasMan API**

## Projects Collection [/projects]
### List all Projects [GET]
+ Response 200 (application/json)

        [{
            "id": 1,
            "name": "PasMan",
            "location": "http://pasman.io",
            "description": "PasMan is a fast and easy to use service to manage passwords.",
            "meta": {
                "touched": "1405888671",
                "created": "1405888671",
                "modified": "1405888671"
            }
        }, {
            "id": 2,
            "name": "Foobar",
            "location": "http://foobar.io",
            "description": "Create your own bar of foos.",
            "meta" : {
                "touched": "1405888671",
                "created": "1405888671",
                "modified": "1405888671"
            }
        }, {
            "id": 3,
            "name": "HelloWorld",
            "location": "http://helloworld.io",
            "description": "A service to say hello to the world.",
            "meta": {
                "touched": "1405888671",
                "created": "1405888671",
                "modified": "1405888671"
            }
        }]

### Create a Project [POST]
+ Request (application/json)

        {
            "name": "CoffeeBeans",
            "location": "http://coffeebeans.io",
            "description": "We sell roasted coffee beans."
        }

+ Response 201 (application/json)

        {
            "id": 4,
            "name": "CoffeeBeans",
            "location": "http://coffeebeans.io",
            "description": "We sell roasted coffee beans.",
            "meta": {
                "touched": "1405888976",
                "created": "1405888976",
                "modified": "1405888976"
            }
        }

## Project [/projects/{id}]
A single Project object.

The Project resource has the following attributes: 

- id
- name
- location
- description
- touched
- created
- modified

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Project to perform action with.

### Retrieve a Project [GET]
+ Response 200 (application/json)

    + Body

            {
                "id": 1,
                "name": "PasMan",
                "location": "http://pasman.io",
                "description": "PasMan is a fast and easy to use service to manage passwords.",
                "meta": {
                    "touched": "1405888671",
                    "created": "1405888671",
                    "modified": "1405888671"
                }
            }

### Edit a Project [PATCH]
To update a Project send a JSON with updated value for one or more of the Project resource attributes. All attributes values (states) from the previous version of this Project are carried over by default if not included in the hash.

+ Request (application/json)

        {
            "description": "PasMan is an uber fast and easy to use service to manage passwords."
        }

+ Response 200
    
        {
            "id": 1,
            "name": "PasMan",
            "location": "http://pasman.io",
            "description": "PasMan is an uber fast and easy to use service to manage passwords.",
            "meta": {
                "touched": "1405898206",
                "created": "1405888671",
                "modified": "1405898206"
            }
        }


### Remove a Project [DELETE]
+ Response 204

# Group Identities
Identities related resources of the **PasMan API**

## Identities Collection [/identities]
### List all Identities [GET]
+ Response 200 (application/json)

        [{ 
            "id": 1,
            "project": { 
                "id": 1,
                "name": "PasMan"
            },
            "server": "http://pasman.io",
            "path": "/admin",
            "user": "batman",
            "pass": "3KDhcave",
            "memo": "Pass rotated every 3m",
            "tags": [{
                "id": 1,
                "name": "webadmin"
            }],
            "meta": {
                "touched": "1405888671",
                "created": "1405888671",
                "modified": "1405888671"
            }
        }, { 
            "id": 2,
            "project": { 
                "id": 1,
                "name": "PasMan"
            },
            "server": "http://cavesoft.io",
            "path": "/public_html",
            "user": "batman",
            "pass": "ckakd@kdbats",
            "memo": "Pass rotated every 2m",
            "tags": [{
                "id": 2,
                "name": "cpanel"
            },{
                "id": 3,
                "name": "mysql"
            }],
            "meta": {
                "touched": "1405888671",
                "created": "1405888671",
                "modified": "1405888671"
            }
        }, { 
            "id": 3,
            "project": { 
                "id": 2,
                "name": "FooBar"
            },
            "server": "http://foobar.io",
            "path": "/signin",
            "user": "bigfoo",
            "pass": "foos4bars$*@",
            "memo": "",
            "tags": [{
                "id": 1,
                "name": "webadmin"
            }],
            "meta": {
                "touched": "1405888671",
                "created": "1405888671",
                "modified": "1405888671"
            }
        }]

### Create an Identity [POST]
- `project` (required, integer) ... Assign identity to another project by project id
- `tags` (optional, array) ... Edit tags with array of tag ids

+ Request (application/json)

        {
            "project": 3,
            "server": "http://helloworld.io",
            "path": "/admin",
            "user": "nihao",
            "pass": "zia%jian",
            "memo": "",
            "tags": [1],
        }

+ Response 201 (application/json)

        {
            "id": 4,
            "project": {
                "id": 3,
                "name": "HelloWorld"
            },
            "server": "http://helloworld.io",
            "path": "/admin",
            "user": "nihao",
            "pass": "zia%jian",
            "memo": "",
            "tags": [{
                "id": 1,
                "name": "webadmin"
            }],
            meta: {
                "touched": "1405892570",
                "created": "1405892570",
                "modified": "1405892570"
            }
        }


## Identity [/identities/{id}]
A single Indentity object.

The Indentity resource has the following attributes:

- id
- project
- server
- path
- user
- pass
- memo
- tags
- touched
- created
- modified

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Identity to perform action with.

### Retrieve an Identity [GET]
+ Response 200 (application/json)

    + Body

            { 
                "id": 1,
                "project": { 
                    "id": 1,
                    "name": "PasMan"
                },
                "server": "http://pasman.io",
                "path": "/admin",
                "user": "batman",
                "pass": "3KDhcave",
                "memo": "Pass rotated every 3m",
                "tags": [{
                    "id": 1,
                    "name": "webadmin"
                }],
                "meta": {
                    "touched": "1405888671",
                    "created": "1405888671",
                    "modified": "1405888671"
                }
            }

### Edit an Identity [PATCH]
To update an Identity send a JSON with updated value for one or more of the Identity resource attributes. All attributes values (states) from the previous version of this Identity are carried over by default if not included in the hash.

Edit project or tags:

- `project` (optional, integer) ... Assign identity to another project by project id
- `tags` (optional, array) ... Edit tags with array of tag ids

+ Request (application/json)

        {
            "pass": "think*%cav3"
        }

+ Response 200
    
        { 
            "id": 1,
            "project": { 
                "id": 1,
                "name": "PasMan"
            },
            "server": "http://pasman.io",
            "path": "/admin",
            "user": "batman",
            "pass": "think*%cav3",
            "memo": "Pass rotated every 3m",
            "tags": [{
                "id": 1,
                "name": "webadmin"
            }],
            "meta": {
                "touched": "1405898206",
                "created": "1405888671",
                "modified": "1405898206"
            }
        }

+ Request (application/json)

        {
            "project": 2
        }

+ Response 200

        { 
            "id": 1,
            "project": { 
                "id": 2,
                "name": "FooBar"
            },
            "server": "http://pasman.io",
            "path": "/admin",
            "user": "batman",
            "pass": "think*%cav3",
            "memo": "Pass rotated every 3m",
            "tags": [{
                "id": 1,
                "name": "webadmin"
            }],
            "meta": {
                "touched": "1405919947",
                "created": "1405888671",
                "modified": "1405919947"
            }
        }

+ Request (application/json)

        {
            "tags": [2, 3]
        }

+ Response 200

        { 
            "id": 1,
            "project": { 
                "id": 1,
                "name": "PasMan"
            },
            "server": "http://pasman.io",
            "path": "/admin",
            "user": "batman",
            "pass": "think*%cav3",
            "memo": "Pass rotated every 3m",
            "tags": [{
                "id": 2,
                "name": "cpanel"
            }, {
                "id": 3,
                "name": "mysql"
            }],
            "meta": {
                "touched": "1405919947",
                "created": "1405888671",
                "modified": "1405919947"
            }
        }

### Remove an Identity [DELETE]
+ Response 204

# Group Tags 
Tags related resources of the **PasMan API**

## Tags [/tags]
### List all Tags [GET]
+ Response 200 (application/json)

        [{
            "id": 1,
            "name": "webadmin"
        }, {
            "id": 2,
            "name": "cpanel"
        }, {
            "id": 3,
            "name": "mysql"
        }]

### Create a Tag [POST]
+ Request (application/json)

        {
            "name": "twitter"
        }
        
+ Response 201 (application/json)

        {
            "id": 4,
            "name": "twitter"
        }

## Tag [/tags/{id}]
A single Tag object.

The Tag resource has the following resources:

- id
- name

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Tag to perform action with.

### Retrieve a Tag [GET]
+ Response 200 (application/json)

    + Body
    
            {
                "id": 1,
                "name": "webadmin"
            }

### Edit a Tag [PATCH]
To update an Identity send a JSON with updated value for one or more of the Identity resource attributes. All attributes values (states) from the previous version of this Identity are carried over by default if not included in the hash.

+ Request (application/json)

        {
            "name": "webpanel"
        }

+ Response 200
    
        {
            "id": 1,
            "name": "webpanel"
        }

### Remove a Tag [DELETE]
+ Response 204


